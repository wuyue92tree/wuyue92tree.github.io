(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{448:function(s,t,e){"use strict";e.r(t);var a=e(12),n=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[s._v("#")]),s._v(" 介绍")]),s._v(" "),e("p",[s._v("如何保证服务正常运行是广大程序员们都关心的问题。要知道在项目开发完了，往服务器上一部署就撒手不管了，可不是你我该有的态度。等碰到服务半夜异常退出的时候，那就头大了。该如何让我们的服务运行更稳定呢？那么就要请出今天要介绍给大家的主角"),e("code",[s._v("supervisor")]),s._v("了！")]),s._v(" "),e("p",[s._v("supervisor是一款基于python开发的守护进程工具，支持Linux/Unix系统的进程管理，提供对进程进行交互式命令行模式及HTTP网页模式的控制，自4.0版本发布之后，已全面支持python2及python3的部署。")]),s._v(" "),e("h2",{attrs:{id:"部署及安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#部署及安装"}},[s._v("#")]),s._v(" 部署及安装")]),s._v(" "),e("h3",{attrs:{id:"获取supervisor"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#获取supervisor"}},[s._v("#")]),s._v(" 获取supervisor")]),s._v(" "),e("p",[s._v("因为是直接基于centos7的，所以直接通过yum命令安装即可，而且通过yum直接安装时，会自动生成启动脚本，方便配置supervisor随系统启动。")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 安装下载源")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" epel-release\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" supervisor\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h3",{attrs:{id:"配置文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置文件"}},[s._v("#")]),s._v(" 配置文件")]),s._v(" "),e("p",[s._v("安装完成之后会在"),e("code",[s._v("/etc")]),s._v("目录下生成主配置文件及子配置文件目录")]),s._v(" "),e("p",[s._v("主配置文件")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("## /etc/supervisord.conf\n## 关键内容\n\n## 若要开启web管理，则像如下配置\n[inet_http_server]\nport=0.0.0.0:9001\nusername=user\npassword=123\n## 如下配置用于指定子配置文件路径及有效子配置文件后缀`.ini`\n[include]\nfiles = supervisord.d/*.ini\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[s._v("子配置文件目录")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("## /etc/supervisord.d/\n## 示例 /etc/supervisord.d/frp_client.ini\n[program:frp_client]\ndirectory = /opt/frp ; 程序的启动目录\ncommand = /opt/frp/frpc -c frpc.ini   ; 启动命令，可以看出与手动在命令行启动的命令是一样的\nautostart = true     ; 在 supervisord 启动的时候也自动启动\nstartsecs = 5        ; 启动 5 秒后没有异常退出，就当作已经正常启动了\nautorestart = true   ; 程序异常退出后自动重启\nstartretries = 3     ; 启动失败自动重试次数，默认是 3\nuser = wuyue          ; 用哪个用户启动\nredirect_stderr = true  ; 把 stderr 重定向到 stdout，默认 false\nstdout_logfile_maxbytes = 20MB  ; stdout 日志文件大小，默认 50MB\nstdout_logfile_backups = 20     ; stdout 日志文件备份数\n; stdout 日志文件，需要注意当指定目录不存在时无法正常启动，所以需要手动创建目录（supervisord 会自动创建日志文件）\nstdout_logfile = /data/logs/frp_client_stdout.log\n;\n; ; 可以通过 environment 来添加需要的环境变量，一种常见的用法是修改 PYTHONPATH\n; ; environment=PYTHONPATH=$PYTHONPATH:/path/to/somewhere\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br")])]),e("p",[s._v("注意事项:")]),s._v(" "),e("ol",[e("li",[e("code",[s._v("command")]),s._v("最好使用绝对路径，使用相对路径时，supervisor可能找不到启动命令，导致服务启动失败；")]),s._v(" "),e("li",[s._v("若程序要求使用普通用户运行时，一定要在将"),e("code",[s._v("user")]),s._v("配置为对应的普通用户，否则将使用root用户启动程序；")]),s._v(" "),e("li",[s._v("配置好"),e("code",[s._v("stdout_logfile")]),s._v("有利于进行程序异常的定位。")])]),s._v(" "),e("h3",{attrs:{id:"启动服务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启动服务"}},[s._v("#")]),s._v(" 启动服务")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl start supervisord.service\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 配置服务开机启动")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" supervisord.service\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h3",{attrs:{id:"命令行模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#命令行模式"}},[s._v("#")]),s._v(" 命令行模式")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("sudo supervisorctl\nfrp_client                       RUNNING   pid 1468, uptime 23:57:52\nhass                             RUNNING   pid 1354, uptime 23:57:54\njupyterlab                       STOPPED   Not started\nwukong_robot                     STOPPED   Not started\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("h3",{attrs:{id:"http管理模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http管理模式"}},[s._v("#")]),s._v(" HTTP管理模式")]),s._v(" "),e("p",[s._v("输入配置的用户名及密码")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/wuyue92tree/oss/raw/master/blog/CHQr3B.jpg",alt:""}})]),s._v(" "),e("p",[s._v("至此便能方便的对进程进行监控管理了，即便是服务器宕机重启，supervisor也能成功的重新拉起部署的服务，美滋滋有木有~")])])}),[],!1,null,null,null);t.default=n.exports}}]);