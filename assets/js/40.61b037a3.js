(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{470:function(n,e,t){"use strict";t.r(e);var o=t(12),s=Object(o.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",[n._v("介绍")]),n._v(" "),t("p",[n._v("使用kubectl来管理Kubernetes集群。")]),n._v(" "),t("p",[n._v("可以在  "),t("a",{attrs:{href:"https://github.com/kubernetes/kubernetes"}},[n._v("https://github.com/kubernetes/kubernetes")]),n._v("   找到更多的信息。")]),n._v(" "),t("h1",[n._v("安装")]),n._v(" "),t("p",[t("a",{attrs:{href:"https://kubernetes.io/docs/tasks/tools/install-kubectl/#install-kubectl"}},[n._v("https://kubernetes.io/docs/tasks/tools/install-kubectl/#install-kubectl")])]),n._v(" "),t("h1",[n._v("配置文件")]),n._v(" "),t("pre",[t("code",[n._v("# 默认路径：~/.kube/\n# 查看可用配置文件\nkubectl config get-contexts\n# 切换配置文件\nkubectl config use-context name-of-k8s")])]),n._v(" "),t("h1",[n._v("命令行扩展")]),n._v(" "),t("h2",[n._v("kubectl-shell")]),n._v(" "),t("pre",[t("code",[n._v("pip install kube-shell")])]),n._v(" "),t("h2",[n._v("zshrc自动补全")]),n._v(" "),t("pre",[t("code",[n._v('source <(kubectl completion zsh)\necho "source <(kubectl completion zsh)" >> ~/.zshrc')])]),n._v(" "),t("h1",[n._v("hello-world")]),n._v(" "),t("p",[n._v("创建一个单节点应用")]),n._v(" "),t("pre",[t("code",[n._v("# hello-word.yaml\n"),t("p",[n._v("apiVersion: v1\nkind: Pod\nmetadata:\nname: hello-world\nspec: # specification of the pod’s contents\nrestartPolicy: Never\ncontainers:")]),n._v("\n"),t("ul",[n._v("\n"),t("li",[n._v('name: hello\nimage: "ubuntu:14.04"\ncommand: ["/bin/echo", "hello", "world"]')])])])]),n._v(" "),t("h1",[n._v("Replication Controller")]),n._v(" "),t("p",[n._v("创建一个固定pods数的应用集，如果运行的太多，它会杀掉一些；如果运行的太少，它会启动一些。")]),n._v(" "),t("pre",[t("code",[n._v("# nginx-rc.yaml"),n._v("\n"),n._v("\n"),t("p",[n._v("apiVersion: v1\nkind: ReplicationController\nmetadata:\nname: my-nginx\nspec:\nreplicas: 2\ntemplate:\nmetadata:\nlabels:\napp: nginx\nspec:\ncontainers:\n- name: nginx\nimage: nginx\nports:\n- containerPort: 80")])])]),n._v(" "),t("h1",[n._v("Horizontal Pod Autoscaling")]),n._v(" "),t("p",[n._v("根据pod节点的设备性能（CPU使用率或应用自定义metrics），动态调整pod数量。")]),n._v(" "),t("pre",[t("code",[n._v("https://www.kubernetes.org.cn/horizontal-pod-autoscaling")])]),n._v(" "),t("h1",[n._v("连接应用")]),n._v(" "),t("h2",[n._v("创建service")]),n._v(" "),t("p",[n._v("为应用添加服务层，将服务暴露到外部。")]),n._v(" "),t("pre",[t("code",[n._v("# nginxsvc.yaml"),t("p"),n._v("\n"),t("p",[n._v("apiVersion: v1\nkind: Service\nmetadata:\nname: nginxsvc\nlabels:\napp: nginx\nspec:\nports:")]),n._v("\n"),t("ul",[n._v("\n"),t("li",[n._v("port: 80\nprotocol: TCP\nselector:\napp: nginx")])])])]),n._v(" "),t("h2",[n._v("确认DNS pod是否启用")]),n._v(" "),t("pre",[t("code",[n._v("╰─$ kubectl get svc kube-dns --namespace=kube-system\nNAME       TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)         AGE\nkube-dns   ClusterIP   10.43.0.10   <none>        53/UDP,53/TCP   52d")])]),n._v(" "),t("h2",[n._v("创建curlpod用于检测")]),n._v(" "),t("pre",[t("code",[n._v("# curlpod.yaml"),n._v("\n"),n._v("\n"),t("p",[n._v("apiVersion: v1\nkind: Pod\nmetadata:\nname: curlpod\nspec:\ncontainers:")]),n._v("\n"),t("ul",[n._v("\n"),t("li",[n._v("image: radial/busyboxplus:curl\ncommand:\n"),t("ul",[n._v("\n"),t("li",[n._v("sleep")]),n._v("\n"),t("li",[n._v('"3600"\nimagePullPolicy: IfNotPresent\nname: curlcontainer\nrestartPolicy: Always')])])])])])]),n._v(" "),t("pre",[t("code",[n._v("╰─$ kubectl exec curlpod -- nslookup nginxsvc\nServer:    10.43.0.10\nAddress 1: 10.43.0.10 kube-dns.kube-system.svc.cluster.local"),n._v("\n"),n._v("\n"),n._v("\n"),n._v("\n"),t("p",[n._v("Name:      nginxsvc\nAddress 1: 10.43.149.64 nginxsvc.gogs.svc.cluster.local")])])]),t("p")])}),[],!1,null,null,null);e.default=s.exports}}]);