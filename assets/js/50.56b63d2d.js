(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{487:function(e,n,r){"use strict";r.r(n);var s=r(12),a=Object(s.a)({},(function(){var e=this,n=e.$createElement,r=e._self._c||n;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",[e._v("清理")]),e._v(" "),r("p",[e._v("初始化部署环境，清除历史数据")]),e._v(" "),r("pre",[r("code",[e._v("sudo rm -rf /etc/kubenetes/*\nsudo rm -rf /var/lib/kubelet/*\nsudo rm -rf /var/lib/cni/*\nsudo rm -rf /var/lib/calico/*")])]),e._v(" "),r("h1",[e._v("示例")]),e._v(" "),r("p",[e._v("生成配置文件: rke config")]),e._v(" "),r("p",[e._v("启动集群: rke up")]),e._v(" "),r("p",[e._v("集群成功启动后，会生成一个对应的kubectl配置文件"),r("kube_config_cluster.yml")],1),e._v(" "),r("pre",[r("code",[e._v('# If you intened to deploy Kubernetes in an air-gapped environment,\n# please consult the documentation on how to configure custom RKE images.\nnodes:\n- address: 192.168.1.201\n  port: "22"\n  internal_address: ""\n  role:\n  - controlplane\n  - worker\n  - etcd\n  hostname_override: ""\n  user: vagrant\n  # docker_socket: /var/run/docker.sock\n  # ssh_key: ""\n  # ssh_key_path: ~/.ssh/id_rsa\n  labels: {}\n- address: 192.168.1.202\n  port: "22"\n  internal_address: ""\n  role:\n  - controlplane\n  - worker\n  - etcd\n  hostname_override: ""\n  user: vagrant\n  # docker_socket: /var/run/docker.sock\n  # ssh_key: ""\n  # ssh_key_path: ~/.ssh/id_rsa\n  labels: {}\n- address: 192.168.1.203\n  port: "22"\n  internal_address: ""\n  role:\n  - controlplane\n  - worker\n  - etcd\n  hostname_override: ""\n  user: vagrant\n  # docker_socket: /var/run/docker.sock\n  # ssh_key: ""\n  # ssh_key_path: ~/.ssh/id_rsa\n  labels: {}\nservices:\n  etcd:\n    image: ""\n    extra_args: {}\n    extra_binds: []\n    extra_env: []\n    external_urls: []\n    ca_cert: ""\n    cert: ""\n    key: ""\n    path: ""\n    snapshot: null\n    retention: ""\n    creation: ""\n  kube-api:\n    image: ""\n    extra_args: {}\n    extra_binds: []\n    extra_env: []\n    service_cluster_ip_range: 10.43.0.0/16\n    service_node_port_range: ""\n    pod_security_policy: false\n  kube-controller:\n    image: ""\n    extra_args: {}\n    extra_binds: []\n    extra_env: []\n    cluster_cidr: 10.42.0.0/16\n    service_cluster_ip_range: 10.43.0.0/16\n  scheduler:\n    image: ""\n    extra_args: {}\n    extra_binds: []\n    extra_env: []\n  kubelet:\n    image: ""\n    extra_args: {}\n    extra_binds: []\n    extra_env: []\n    cluster_domain: cluster.local\n    infra_container_image: ""\n    cluster_dns_server: 10.43.0.10\n    fail_swap_on: false\n  kubeproxy:\n    image: ""\n    extra_args: {}\n    extra_binds: []\n    extra_env: []\nnetwork:\n  plugin: canal\n  options: {}\nauthentication:\n  strategy: x509\n  options: {}\n  sans: []\naddons: ""\naddons_include: []\nsystem_images:\n  etcd: rancher/coreos-etcd:v3.2.24\n  alpine: rancher/rke-tools:v0.1.16\n  nginx_proxy: rancher/rke-tools:v0.1.16\n  cert_downloader: rancher/rke-tools:v0.1.16\n  kubernetes_services_sidecar: rancher/rke-tools:v0.1.16\n  kubedns: rancher/k8s-dns-kube-dns-amd64:1.15.0\n  dnsmasq: rancher/k8s-dns-dnsmasq-nanny-amd64:1.15.0\n  kubedns_sidecar: rancher/k8s-dns-sidecar-amd64:1.15.0\n  kubedns_autoscaler: rancher/cluster-proportional-autoscaler-amd64:1.0.0\n  kubernetes: rancher/hyperkube:v1.13.4-rancher1\n  flannel: rancher/coreos-flannel:v0.10.0\n  flannel_cni: rancher/coreos-flannel-cni:v0.3.0\n  calico_node: rancher/calico-node:v3.4.0\n  calico_cni: rancher/calico-cni:v3.4.0\n  calico_controllers: ""\n  calico_ctl: rancher/calico-ctl:v2.0.0\n  canal_node: rancher/calico-node:v3.4.0\n  canal_cni: rancher/calico-cni:v3.4.0\n  canal_flannel: rancher/coreos-flannel:v0.10.0\n  wave_node: weaveworks/weave-kube:2.5.0\n  weave_cni: weaveworks/weave-npc:2.5.0\n  pod_infra_container: rancher/pause-amd64:3.1\n  ingress: rancher/nginx-ingress-controller:0.21.0-rancher1\n  ingress_backend: rancher/nginx-ingress-controller-defaultbackend:1.4\n  metrics_server: rancher/metrics-server-amd64:v0.3.1\nssh_key_path: ~/.ssh/id_rsa\nssh_agent_auth: false\nauthorization:\n  mode: rbac\n  options: {}\nignore_docker_version: false\nkubernetes_version: ""\nprivate_registries: []\ningress:\n  provider: ""\n  options: {}\n  node_selector: {}\n  extra_args: {}\ncluster_name: ""\ncloud_provider:\n  name: ""\nprefix_path: ""\naddon_job_timeout: 0\nbastion_host:\n  address: ""\n  port: ""\n  user: ""\n  ssh_key: ""\n  ssh_key_path: ""\nmonitoring:\n  provider: ""\n  options: {}')])]),e._v(" "),r("h1",[e._v("安装rancher")]),e._v(" "),r("h2",[e._v("helm添加源")]),e._v(" "),r("ol",[r("li",[e._v("kubectl初始化")]),e._v(" "),r("li",[e._v("helm初始化\n"),r("pre",[r("code",[e._v("helm repo add rancher-latest https://releases.rancher.com/server-charts/latest")])]),e._v(" "),r("h2",[e._v("安装cert-manager")]),e._v(" "),r("pre",[r("code",[e._v("helm install stable/cert-manager \\\n--name cert-manager \\\n--namespace kube-system \\\n--version v0.5.2")])]),e._v(" "),r("h2",[e._v("安装rancher")]),e._v(" "),r("pre",[r("code",[e._v("helm install rancher-latest/rancher \\\n--name rancher \\\n--namespace cattle-system \\\n--set hostname=rancher.my.org")])]),e._v(" "),r("h1",[e._v("FAQ")])])]),e._v(" "),r("h2",[e._v("ubuntu18.04 helm issue")]),e._v(" "),r("pre",[r("code",[e._v('Client: &version.Version{SemVer:"v2.11.0", GitCommit:"2e55dbe1fdb5fdb96b75ff144a339489417b146b", GitTreeState:"clean"}\nE0320 10:35:39.112701   16569 portforward.go:331] an error occurred forwarding 56150 -> 44134: error forwarding port 44134 to pod f86eff10241836bdc8d139c995c739ac1c696dd6c77411aaf9581b20cbfa7dd1, uid : exit status 1: 2019/03/20 02:35:39 socat[28844] E getaddrinfo("localhost", "NULL", {1,2,1,6}, {}): Temporary failure in name resolution\nError: cannot connect to Tiller')])]),e._v(" "),r("p",[e._v("解决方案：")]),e._v(" "),r("pre",[r("code",[e._v("# https://github.com/kubernetes/kubeadm/issues/787\n"),r("p",[e._v("sudo rm /etc/resolv.conf\nsudo ln -s /run/systemd/resolve/resolv.conf /etc/resolv.conf")])])]),e._v(" "),r("h2",[e._v("rke启动提示无法连接到目标主机（ubuntu14.04）")]),e._v(" "),r("pre",[r("code",[e._v("WARN[0002] Failed to set up SSH tunneling for host [172.16.25.38]: Can't retrieve Docker Info: error during connect: Get http://%2Fvar%2Frun%2Fdocker.sock/v1.24/info: Unable to access the Docker socket (/var/run/docker.sock). Please check if the configured user can execute "),r("code",[e._v("docker ps")]),e._v(" on the node, and if the SSH server version is at least version 6.7 or higher. If you are using RedHat/CentOS, you can't use the user "),r("code",[e._v("root")]),e._v(". Please refer to the documentation for more instructions. Error: ssh: rejected: administratively prohibited (open failed)")])]),e._v(" "),r("p",[e._v("解决方案：")]),e._v(" "),r("p",[e._v("升级openssh-server版本")]),e._v(" "),r("ol",[r("li",[r("p",[e._v("apt升级")]),e._v(" "),r("pre",[r("code",[e._v('echo "deb http://old-releases.ubuntu.com/ubuntu yakkety main universe multiverse" >> /etc/apt/sources.list\nsudo apt-get update\nsudo apt-get install openssh-server')])])]),e._v(" "),r("li",[r("p",[e._v("源码编译升级")]),e._v(" "),r("pre",[r("code",[e._v('sudo apt install -y build-essential libssl-dev zlib1g-dev\nwget "https://fastly.cdn.openbsd.org/pub/OpenBSD/OpenSSH/portable/openssh-7.4p1.tar.gz"\ntar xfz openssh-7.4p1.tar.gz\ncd openssh-7.4p1\n./configure\nmake\nsudo make install && sudo service ssh restart && ssh -V')])])])]),r("p")])}),[],!1,null,null,null);n.default=a.exports}}]);